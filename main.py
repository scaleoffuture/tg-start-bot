from telegram import Update, ReplyKeyboardMarkup, InputFile
from telegram.ext import ApplicationBuilder, CommandHandler, ContextTypes,  MessageHandler, filters
from asyncio import sleep

user_names = {}

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    keyboard = [["üìõ –ú–æ—ë –∏–º—è", "üÜò –ü–æ–º–æ—â—å", "‚ú® –ö–æ–º–∞–Ω–¥—ã"]]
    reply_markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True)
    await update.message.reply_text("–ü—Ä–∏–≤–µ—Ç! –Ø —Ç–≤–æ–π –ø–µ—Ä–≤—ã–π Telegram-–±–æ—Ç ü§ñ",
    reply_markup=reply_markup)


async def help(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–Ø –≥–æ—Ç–æ–≤ –ø–æ–º–æ—á—å —Å —á–µ–º —É–≥–æ–¥–Ω–æ! –¢–æ–ª—å–∫–æ —Å–∫–∞–∂–∏ üë©‚Äçüíª")


async def about(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "–Ø - –ø–µ—Ä–≤—ã–π Telegram-–±–æ—Ç –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ–≥–æ —Å–æ–∑–¥–∞—Ç–µ–ª—è Scaleoffuture.\n"
        "–í–º–µ—Å—Ç–µ –º—ã —Å–æ–∑–¥–∞–µ–º —Ü–µ–Ω–Ω–æ—Å—Ç—å –¥–ª—è –≤—Å–µ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è.\n"
        "–¢–µ, –∫—Ç–æ –≤—ã–±–∏—Ä–∞—é—Ç –Ω–∞—Å, –ø–æ–ª—É—á–∞—é—Ç —Å–∞–º—ã–π –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–π –ø—Ä–æ–¥—É–∫—Ç –≤–æ –≤—Å–µ—Ö —Ä—ã–Ω–∫–∞—Ö.\n"
        "–î–∞–∂–µ –µ—Å–ª–∏ —Ç–∞–∫–æ–≤—ã—Ö –Ω–µ—Ç.\n"
        "–Ø –Ω–µ –ø—Ä–æ—Å—Ç–æ Telegram-–±–æ—Ç, —è - —Ç–≤–æ–π –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç, –∫–æ—Ç–æ—Ä—ã–π –≥–æ—Ç–æ–≤ –≤—ã–¥–∞–≤–∞—Ç—å –º–∞–∫—Å–∏–º—É–º –∏–∑ —Å–≤–æ–µ–π —Ä–∞–±–æ—Ç—ã.\n"
        "–ú—ã –≤—Å–µ–≥–¥–∞ –±—É–¥–µ–º —Å—Ç—Ä–µ–º–∏—Ç—å—Å—è –∫ –∫–∞—á–µ—Å—Ç–≤—É, —Å–≤–æ–±–æ–¥–µ –∏ –ø–æ–ª—å–∑–µ –¥–ª—è –≤—Å–µ–≥–æ –º–∏—Ä–∞."
    )

    
async def commands(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–ù–∞—à–∏ –∫–æ–º–∞–Ω–¥—ã: /start, /help, /about, /myname, /timer –∏ /commands")


async def save_name(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.message.from_user.id
    name = update.message.text
    user_names[user_id] = name
    await update.message.reply_text(f"–ü—Ä–∏—è—Ç–Ω–æ –ø–æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è, {name}! üòä")


#async def my_name(update: Update, context: ContextTypes.DEFAULT_TYPE):
    #user_id = update.message.from_user.id
    #name = user_names.get(user_id)
    #if name:
        #await update.message.reply_text(f"–¢–≤–æ—ë –∏–º—è ‚Äî {name}!")
    #else:
        #await update.message.reply_text("–Ø –µ—â—ë –Ω–µ –∑–Ω–∞—é —Ç–≤–æ—ë –∏–º—è. –ù–∞–ø–∏—à–∏ –µ–≥–æ!")


async def my_name(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if context.args:
        name = ' '.join(context.args)
        context.user_data['name'] = name
        await update.message.reply_text(f"–û—Ç–ª–∏—á–Ω–æ, {name}, —è –∑–∞–ø–æ–º–Ω–∏–ª —Ç–≤–æ—ë –∏–º—è!")
    else:
        name = context.user_data.get('name')
        if name:
            await update.message.reply_text(f"–¢–≤–æ—ë –∏–º—è ‚Äî {name}.")
        else:
            await update.message.reply_text("–Ø –ø–æ–∫–∞ –Ω–µ –∑–Ω–∞—é —Ç–≤–æ—ë –∏–º—è. –ù–∞–ø–∏—à–∏ –µ–≥–æ –ø–æ—Å–ª–µ –∫–æ–º–∞–Ω–¥—ã, –Ω–∞–ø—Ä–∏–º–µ—Ä: /myname Vlad")


async def handle_text(update: Update, context: ContextTypes.DEFAULT_TYPE):
    text = update.message.text

    if text == "üìõ –ú–æ—ë –∏–º—è":
        await my_name(update, context)
    elif text == "üÜò –ü–æ–º–æ—â—å":
        await help(update, context)
    elif text == "‚ú® –ö–æ–º–∞–Ω–¥—ã":
        await commands(update,context)
    #else:
        #context.user_data["name"] = text
        #await update.message.reply_text(f"–ü—Ä–∏—è—Ç–Ω–æ –ø–æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è, {text}! üòä")


async def handle_photo(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–û—Ç–ª–∏—á–Ω–æ–µ —Ñ–æ—Ç–æ! üëå")


async def remind(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–ù–∞–ø–æ–º–Ω—é —á–µ—Ä–µ–∑ 18 —Å–µ–∫—É–Ω–¥!")
    await sleep(18)
    await update.message.reply_text("‚åõ –ù–∞–ø–æ–º–∏–Ω–∞—é!")


app = ApplicationBuilder().token("YOUR TOKEN").build()

# commands of the bot
app.add_handler(CommandHandler("start", start))
app.add_handler(CommandHandler("help", help))
app.add_handler(CommandHandler("about", about))
app.add_handler(CommandHandler("commands", commands))
app.add_handler(CommandHandler("myname", my_name))
app.add_handler(CommandHandler("timer", remind))

# 
app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_text))
app.add_handler(MessageHandler(filters.PHOTO, handle_photo))

app.run_polling()
print('Our bot is ready‚ö°')
